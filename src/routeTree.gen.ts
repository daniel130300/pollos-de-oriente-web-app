/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NoauthImport } from './routes/_no_auth'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const NoauthSignupLazyImport = createFileRoute('/_no_auth/signup')()
const NoauthSigninLazyImport = createFileRoute('/_no_auth/signin')()
const NoauthResetPasswordLazyImport = createFileRoute(
  '/_no_auth/reset-password',
)()
const AuthProductsIndexLazyImport = createFileRoute('/_auth/products/')()
const AuthProfileUpdatePasswordLazyImport = createFileRoute(
  '/_auth/profile/update-password',
)()
const AuthProductsAddProductLazyImport = createFileRoute(
  '/_auth/products/add-product',
)()
const AuthProductsIdLazyImport = createFileRoute('/_auth/products/$id')()

// Create/Update Routes

const NoauthRoute = NoauthImport.update({
  id: '/_no_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NoauthSignupLazyRoute = NoauthSignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => NoauthRoute,
} as any).lazy(() =>
  import('./routes/_no_auth/signup.lazy').then((d) => d.Route),
)

const NoauthSigninLazyRoute = NoauthSigninLazyImport.update({
  path: '/signin',
  getParentRoute: () => NoauthRoute,
} as any).lazy(() =>
  import('./routes/_no_auth/signin.lazy').then((d) => d.Route),
)

const NoauthResetPasswordLazyRoute = NoauthResetPasswordLazyImport.update({
  path: '/reset-password',
  getParentRoute: () => NoauthRoute,
} as any).lazy(() =>
  import('./routes/_no_auth/reset-password.lazy').then((d) => d.Route),
)

const AuthProductsIndexLazyRoute = AuthProductsIndexLazyImport.update({
  path: '/products/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/products/index.lazy').then((d) => d.Route),
)

const AuthProfileUpdatePasswordLazyRoute =
  AuthProfileUpdatePasswordLazyImport.update({
    path: '/profile/update-password',
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import('./routes/_auth/profile/update-password.lazy').then((d) => d.Route),
  )

const AuthProductsAddProductLazyRoute = AuthProductsAddProductLazyImport.update(
  {
    path: '/products/add-product',
    getParentRoute: () => AuthRoute,
  } as any,
).lazy(() =>
  import('./routes/_auth/products/add-product.lazy').then((d) => d.Route),
)

const AuthProductsIdLazyRoute = AuthProductsIdLazyImport.update({
  path: '/products/$id',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/products/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_no_auth': {
      preLoaderRoute: typeof NoauthImport
      parentRoute: typeof rootRoute
    }
    '/_no_auth/reset-password': {
      preLoaderRoute: typeof NoauthResetPasswordLazyImport
      parentRoute: typeof NoauthImport
    }
    '/_no_auth/signin': {
      preLoaderRoute: typeof NoauthSigninLazyImport
      parentRoute: typeof NoauthImport
    }
    '/_no_auth/signup': {
      preLoaderRoute: typeof NoauthSignupLazyImport
      parentRoute: typeof NoauthImport
    }
    '/_auth/products/$id': {
      preLoaderRoute: typeof AuthProductsIdLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/products/add-product': {
      preLoaderRoute: typeof AuthProductsAddProductLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/update-password': {
      preLoaderRoute: typeof AuthProfileUpdatePasswordLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/products/': {
      preLoaderRoute: typeof AuthProductsIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([
    AuthProductsIdLazyRoute,
    AuthProductsAddProductLazyRoute,
    AuthProfileUpdatePasswordLazyRoute,
    AuthProductsIndexLazyRoute,
  ]),
  NoauthRoute.addChildren([
    NoauthResetPasswordLazyRoute,
    NoauthSigninLazyRoute,
    NoauthSignupLazyRoute,
  ]),
])

/* prettier-ignore-end */
